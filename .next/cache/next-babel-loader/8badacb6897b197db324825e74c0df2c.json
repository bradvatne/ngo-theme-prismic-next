{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Brad/ngo-next-prismic/pages/index.js\",\n    _this = this;\n\nimport Header from './Header';\nimport SliceZone from './components/SliceZone';\nimport Head from 'next/head';\nimport { RichText } from 'prismic-reactjs';\nimport { Container } from 'react-bootstrap';\n\nvar Index = function Index(_ref) {\n  var doc = _ref.doc;\n  var banner = doc.data;\n  var quote = doc.data.body[0].primary;\n  console.log(banner);\n  console.log(quote);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"NGO Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        header: doc.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), RichText.asText(banner.title), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 40\n      }, _this), RichText.asText(banner.text), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 39\n      }, _this), RichText.asText(banner.button_label)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(SliceZone, {\n      slices: doc.data.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/Brad/ngo-next-prismic/pages/index.js"],"names":["Header","SliceZone","Head","RichText","Container","Index","doc","banner","data","quote","body","primary","console","log","asText","title","text","button_label"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;AACrB,MAAMC,MAAM,GAAGD,GAAG,CAACE,IAAnB;AACA,MAAMC,KAAK,GAAGH,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAc,CAAd,EAAiBC,OAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,sBACA,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,QAAC,GAAD;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAIH,GAAG,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,eADA,EAECL,QAAQ,CAACW,MAAT,CAAgBP,MAAM,CAACQ,KAAvB,CAFD,eAE+B;AAAA;AAAA;AAAA;AAAA,eAF/B,EAGCZ,QAAQ,CAACW,MAAT,CAAgBP,MAAM,CAACS,IAAvB,CAHD,eAG8B;AAAA;AAAA;AAAA;AAAA,eAH9B,EAICb,QAAQ,CAACW,MAAT,CAAgBP,MAAM,CAACU,YAAvB,CAJD;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAWI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEX,GAAG,CAACE,IAAJ,CAASE;AAA5B;AAAA;AAAA;AAAA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADA;AAeH,CApBD;;KAAML,K;;AAkCN,eAAeA,KAAf","sourcesContent":["import Header from './Header'\nimport SliceZone from './components/SliceZone'\nimport Head from 'next/head'\nimport { Client } from '../prismic-configuration'\nimport { RichText } from 'prismic-reactjs'\nimport {Container} from 'react-bootstrap'\n\nconst Index = ({doc}) => {\n    const banner = doc.data\n    const quote = doc.data.body[0].primary\n    console.log(banner)\n    console.log(quote)\n    return (\n    <Container className=\"page-container\">\n        <Head>\n            <title>NGO Example</title>\n        </Head>\n        <Row>\n        <Header header = {doc.data}/>\n        {RichText.asText(banner.title)}<br/>\n        {RichText.asText(banner.text)}<br/>\n        {RichText.asText(banner.button_label)}\n        </Row>\n        \n        <SliceZone slices={doc.data.body} />\n    </Container>\n    )\n}\n\nexport async function getStaticProps() {\n    console.log('hello')\n    const client = Client();\n    const doc = (await client.getSingle(\"home\"))\n\n    return {\n        props: {\n            doc\n        },\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}
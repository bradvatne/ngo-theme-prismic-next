{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Brad/ngo-next-prismic/pages/components/SliceZone.js\",\n    _this = this;\n\nimport Quote from \"./Quote\";\nimport { Container } from \"react-bootstrap\";\n\nvar SliceZone = function SliceZone(_ref) {\n  var slices = _ref.slices;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"slice-zone\",\n    children: slices.map(function (slice, index) {\n      switch (slice.slice_type) {\n        case \"quote\":\n          console.log(\"slice zone: \");\n          console.log(slice.primary);\n          return /*#__PURE__*/_jsxDEV(Quote, {\n            quote: slice.primary\n          }, \"slice-\".concat(index), false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 18\n          }, _this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = SliceZone;\nexport default SliceZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliceZone\");","map":{"version":3,"sources":["/Users/Brad/ngo-next-prismic/pages/components/SliceZone.js"],"names":["Quote","Container","SliceZone","slices","map","slice","index","slice_type","console","log","primary"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,sBAChB,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA,cACGA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B,cAAQD,KAAK,CAACE,UAAd;AACE,aAAK,OAAL;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,OAAlB;AACA,8BAAO,QAAC,KAAD;AAAO,YAAA,KAAK,EAAEL,KAAK,CAACK;AAApB,6BAA2CJ,KAA3C;AAAA;AAAA;AAAA;AAAA,mBAAP;AAJJ;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,WADgB;AAAA,CAAlB;;KAAMJ,S;AAaN,eAAeA,SAAf","sourcesContent":["import Quote from \"./Quote\";\nimport { Container } from \"react-bootstrap\";\n\nconst SliceZone = ({ slices }) => (\n  <Container className=\"slice-zone\">\n    {slices.map((slice, index) => {\n      switch (slice.slice_type) {\n        case \"quote\":\n          console.log(\"slice zone: \");\n          console.log(slice.primary);\n          return <Quote quote={slice.primary} key={`slice-${index}`} />;\n      }\n    })}\n  </Container>\n);\n\nexport default SliceZone;\n"]},"metadata":{},"sourceType":"module"}